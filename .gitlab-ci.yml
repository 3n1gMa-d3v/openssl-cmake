image: viaduck/ci

stages:
    - build         # contains build and test and deploy

variables:
    OPENSSL_BRANCH: "OpenSSL_1_1_0g"
    PREBUILTS_REPO: "https://$GIT_USER:$GIT_PASSWORD@gl.viaduck.org/viaduck/openssl-prebuilts.git"
    ANDROID_PLATFORM: "android-26"
    ANDROID_NDK: "/android/ndk"
    
linux-x86_64:
    script:
        - mkdir build-linux-x86_64
        - useradd -m -d /home/jdoe jdoe                               # OpenSSL tests must be run as unprivileged user
        - cd build-linux-x86_64
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DOPENSSL_INSTALL_MAN=ON
        - chmod -R 777 .                                              # jdoe must be able to write to build directory
        - su -l jdoe -c "cd `pwd` && make"                            # build and test as unprivileged
        - cd ..
        - scripts/commit_result.sh x86_64-linux build-linux-x86_64
    stage: build
    only:
        - master

windows-x86:
    image: viaduck/ci:mingw
    script:
        - mkdir build-windows-x86
        - cd build-windows-x86
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DOPENSSL_INSTALL_MAN=ON -DCROSS=ON -DCROSS_PREFIX=i686-w64-mingw32- -DCROSS_TARGET=mingw
        - make
        - cd ..
        - scripts/commit_result.sh i686-w64-mingw32 build-windows-x86
    stage: build
    only:
        - master

windows-x86_64:
    image: viaduck/ci:mingw
    script:
        - mkdir build-windows-x86_64
        - cd build-windows-x86_64
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DOPENSSL_INSTALL_MAN=ON -DCROSS=ON -DCROSS_PREFIX=x86_64-w64-mingw32- -DCROSS_TARGET=mingw64
        - make
        - cd ..
        - scripts/commit_result.sh x86_64-w64-mingw32 build-windows-x86_64
    stage: build
    only:
        - master

android-arm64-v8a:
    image: viaduck/ci:android
    script:
        - mkdir build-android-arm64-v8a
        - cd build-android-arm64-v8a
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - cd ..
        - scripts/commit_result.sh arm64-v8a-android build-android-arm64-v8a
    stage: build
    only:
        - master
        
android-armeabi-v7a:
    image: viaduck/ci:android
    script:
        - mkdir build-android-armeabi-v7a
        - cd build-android-armeabi-v7a
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=armeabi-v7a -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - cd ..
        - scripts/commit_result.sh armeabi-v7a-android build-android-armeabi-v7a
    stage: build
    only:
        - master
        
android-x86:
    image: viaduck/ci:android
    script:
        - mkdir build-android-x86
        - cd build-android-x86
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=x86 -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - cd ..
        - scripts/commit_result.sh x86-android build-android-x86
    stage: build
    only:
        - master
        
android-x86_64:
    image: viaduck/ci:android
    script:
        - mkdir build-android-x86_64
        - cd build-android-x86_64
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BRANCH=$OPENSSL_BRANCH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=x86_64 -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - cd ..
        - scripts/commit_result.sh x86_64-android build-android-x86_64
    stage: build
    only:
        - master
